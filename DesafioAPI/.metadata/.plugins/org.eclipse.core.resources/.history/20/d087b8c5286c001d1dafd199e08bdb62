package com.gft.controllers;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.gft.dto.PerfilDto;
import com.gft.entities.Perfil;
import com.gft.services.PerfilService;

@RestController
@RequestMapping("v1/perfil")
public class PerfilController {
	
	final private PerfilService perfilService;

	public PerfilController(PerfilService perfilService) {
		this.perfilService = perfilService;
	}
	
	@GetMapping
	public ResponseEntity<Page<Perfil>> buscarTodasEtiquetas(@PageableDefault Pageable pageable)
	{
		return ResponseEntity.ok(perfilService.listarTodosPerfis(pageable));
	}
	
	@PostMapping
	public ResponseEntity<Perfil> salvarPerfil(@RequestBody Perfil dto){
		
		return ResponseEntity.ok(dto);
	}
	
	@GetMapping("{id}")
	public ResponseEntity<Perfil> buscarPerfil(@PathVariable Long id){
		
		Perfil perfil = perfilService.buscarPerfil(id);
		return ResponseEntity.ok(perfil);
	
	}
	
	@PutMapping("{id}")
	public ResponseEntity<Perfil> alterarPerfil(@RequestBody Perfil dto,
			@PathVariable Long id){
		
		Perfil perfil = perfilService.atualizarPerfil(dto, id);	
		
		return ResponseEntity.ok(perfil);
	
	}
	
	@DeleteMapping("{id}")
	public ResponseEntity<Perfil> excluirPerfil(@PathVariable Long id){
		
		perfilService.excluirPerfil(id);
		return ResponseEntity.ok().build();
 }
	
	
}
